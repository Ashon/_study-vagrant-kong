- name: Kong API Gateway 서비스를 구성합니다.
  become: yes
  hosts: kong
  tasks:
    - name: Kong Database를 구동합니다.
      docker_container:
        name: kong-database
        image: postgres:9.4
        env:
          POSTGRES_USER: kong
          POSTGRES_PASSWORD: kong_password
          POSTGRES_DB: kong
      tags: apigw:db

    - name: Kong data migration을 진행합니다.
      docker_container:
        name: kong-migration
        image: kong:latest
        cleanup: yes
        links:
          - kong-database:kong-database
        env:
          KONG_DATABASE: postgres
          KONG_PG_HOST: kong-database
          KONG_PG_USERNAME: kong
          KONG_PG_PASSWORD: kong_password
          KONG_CASSANDRA_CONTACT_POINTS: kong-database
        command: kong migrations up --vv
      tags: apigw:migration

    - name: Kong API gateway 서비스를 구동합니다.
      docker_container:
        name: kong
        image: kong:latest
        env:
          KONG_DATABASE: postgres
          KONG_PG_HOST: kong-database
          KONG_PG_USERNAME: kong
          KONG_PG_PASSWORD: kong_password
          KONG_CASSANDRA_CONTACT_POINTS: kong-database
          KONG_PROXY_ACCESS_LOG: /dev/stdout
          KONG_ADMIN_ACCESS_LOG: /dev/stdout
          KONG_PROXY_ERROR_LOG: /dev/stderr
          KONG_ADMIN_ERROR_LOG: /dev/stderr
          KONG_ADMIN_LISTEN: 0.0.0.0:8001
          KONG_ADMIN_LISTEN_SSL: 0.0.0.0:8444
        links:
          - kong-database:kong-database
        ports:
          - 8000:8000
          - 80:8000
          - 8443:8443
          - 8001:8001
          - 8444:8444
      tags: apigw:api

    - name: Konga Kong UI 서비스를 구동합니다.
      docker_container:
        name: konga
        image: pantsel/konga
        env:
          NODE_ENV: development
        links:
          - kong:kong
        ports:
          - 1337:1337
      tags: apigw:ui
